require('dotenv').config();
const { getDb } = require('../server/lib/mongo');

async function updateExistingClaimsWithThumbnails() {
    try {
        console.log('🔗 Connecting to database...');
        const db = await getDb();
        const projectId = '68bd7488690387dac0eb69c0';

        // Get the current claim
        console.log('🔍 Getting current claim...');
        const claim = await db.collection('claims').findOne({ projectId });
        if (!claim) {
            console.log('❌ No claim found for project');
            return;
        }

        console.log('📋 Current attachments:', claim.generalAttachments?.length || 0);

        // Generate thumbnails for each attachment
        const updatedAttachments = [];
        for (const attachment of claim.generalAttachments || []) {
            if (attachment.isAutoGenerated && attachment.fileUrl) {
                console.log(`🖼️ Generating thumbnail for attachment: ${attachment.id}`);

                try {
                    // Call the PDF thumbnail API endpoint
                    const baseUrl = process.env.BASE_URL || 'http://localhost:3000';
                    const response = await fetch(`${baseUrl}/api/pdf-thumbnail`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            pdfUrl: attachment.fileUrl,
                            _targetWidth: 400 // Thumbnail width
                        })
                    });

                    if (response.ok) {
                        const result = await response.json();
                        const thumbnailUrl = result.url || '';
                        if (thumbnailUrl) {
                            console.log(`✅ Thumbnail generated: ${thumbnailUrl}`);
                            updatedAttachments.push({
                                ...attachment,
                                thumbnailUrl: thumbnailUrl
                            });
                        } else {
                            console.warn(`⚠️ No thumbnail URL returned for ${attachment.id}`);
                            updatedAttachments.push(attachment);
                        }
                    } else {
                        console.warn(`⚠️ Failed to generate thumbnail for ${attachment.id}: ${response.statusText}`);
                        updatedAttachments.push(attachment);
                    }
                } catch (e) {
                    console.error(`❌ Error generating thumbnail for ${attachment.id}:`, e.message);
                    updatedAttachments.push(attachment);
                }
            } else {
                updatedAttachments.push(attachment);
            }
        }

        // Update the claim
        console.log('💾 Updating claim with PDF thumbnails...');
        const result = await db.collection('claims').updateOne(
            { _id: claim._id },
            {
                $set: {
                    generalAttachments: updatedAttachments,
                    updatedAt: new Date()
                }
            }
        );

        console.log('✅ Updated claim:', result.modifiedCount, 'documents');

        console.log('🎉 PDF thumbnails updated successfully!');

    } catch (e) {
        console.error('❌ Error:', e.message);
        console.error(e.stack);
    } finally {
        process.exit(0);
    }
}

updateExistingClaimsWithThumbnails();


